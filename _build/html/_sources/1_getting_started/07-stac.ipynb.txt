{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **SpatioTemporal Asset Catalog (STAC)**\n",
    "\n",
    "## 1. STAC Inquiry\n",
    "### 1.1 What is STAC?\n",
    "The SpatioTemporal Asset Catalog (STAC) provides programmatic access to the Earth Observation metadata index with a wide variety of metadata field parameters available for searching. STAC has common set of search terms so geospatial information can be found and indexed efficiently and quickly. The spatial-temporal organization of data arranges the assets across time and space.\n",
    "\n",
    "### 1.2 The Motivation for creating STAC\n",
    "Groups working with spatial data have not been aware of the given spatial standards that are common in other areas of research. Moreover, data is oftern dispersed and difficult to collect, especially with the multiple search tools required to obtain the different types of data. With the creation of STAC, retrieving satellite data has become easier.\n",
    "\n",
    "The main goal of STAC is to implement global index of satellite, aerial, and other spatial imagery derived from geospatial LiDAR, SAR, Full Motion Video, and Hyperspectral sensors.\n",
    "\n",
    "### 1.3 Who can use STAC?\n",
    "Anyone can! STAC is set up in a way where professional *and* non-professionals can easily query and retrieve data. \n",
    "\n",
    "### 1.4 How does STAC work?\n",
    "Data can be uploaded into STAC once released, and from here the data can be indexed and discovered through common search terms and methods to access information. STAC has a specification organized structure, detailed in the STAC Specification. \n",
    "The STAC organization has 4 main specifications:\n",
    "\n",
    "- **STAC Item:** Spatiotemporal data expressed as a GeoJSON specification.\n",
    "- **STAC Catalog:** Structure for browsing and cataloging items.\n",
    "- **STAC Collection:** Extension of the Catalog, providing information of the items, license information, and other metadata. Each collection is a different dataset with the items metadata. \n",
    "- **STAC API:** API to enables the search engine quality for the data using WFS3 format.\n",
    "\n",
    "\n",
    "### 1.5 When to use STAC?\n",
    "STAC can index data extremely fast and efficient, so it is a good option when querying large amounts of geospatial data. With the escalation of geographic data science, accessing bulks of satellite and aerial images in a quick manner is essential. STAC provides the support of capturing data and its information with ease and speed. \n",
    "\n",
    "Any open access data collection with direct links to the data available, can be added to the STAC Catalog for future indexing. STAC's capabilities of indexing allows to search for specific items according to the data attributes, such as bounding box, geometry, date range, and item properties.\n",
    "\n",
    "\n",
    "## 2. The Benefits\n",
    "- The STAC spec is an easy way to implement, and to be adaptable and flexible to existing implementations. The core philosophy is to enable maximum flexibility.\n",
    "- Uses links (URLs) which enables modeling of much more complex relationships such as providing the source images which can used combined into a mosaic of thousands of images.\n",
    "- Human readable HTML representations of STAC items in the STAC catalog. \n",
    "\n",
    "## 3. GEOAnalytics Canada's STAC Server\n",
    "The GEOAnalytics Canada platform has implemented the STAC Catalog API to be used across the platform and provide easy access to geospatial assets that are openly searchable. As of now, Landsat 8 data is available for querying and accessing. With the use of your API Token, geospatial data can be searched, updated, and analyzed through the GEOAnalytics tools, such as creating a dataframe with the data in a notebook in our GEOAnalytics JupyterLab, or even calling the STAC items in the Desktop VM."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. PySTAC Client and StackSTAC\n",
    "\n",
    "PySTAC Client is a Python package that makes it easier for us to work with STAC Catalogs and APIs. It does this by offering higher-level functionality and the ability to make better use of STAC API search endpoints.\n",
    "\n",
    "StackSTAC is a Python package that enables us to transform a STAC collection into a xarray.DataArray using dask. By doing so we are then able to conduct analyses on the data we queried from a STAC server!\n",
    "\n",
    "To use these packages we must first import them:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "import urllib\n",
    "import requests\n",
    "import stackstac\n",
    "\n",
    "import geopandas as gpd\n",
    "\n",
    "from pystac_client import Client"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. STAC Example\n",
    "Here is an example of the STAC API showing the collections available on our STAC. With the provided API Token and the Base STAC URL, we can get the currently available collections in the GEOAnalytics STAC Server. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "API_TOKEN = input(\"Please copy and paste your API Access Token here: \").strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "STAC_BASE_URL = \"https://stac.geoanalytics.ca\"  \n",
    "requests_headers = {'cookie': API_TOKEN}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_stac_endpoint(endpoint):\n",
    "    url = urllib.parse.urljoin(STAC_BASE_URL, endpoint)\n",
    "    req = requests.get(url, headers=requests_headers)\n",
    "    return req"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'collections': [{'id': 'landsat-8-l1_EXAMPLE',\n",
       "   'links': [{'rel': 'items',\n",
       "     'type': 'application/geo+json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/landsat-8-l1_EXAMPLE/items'},\n",
       "    {'rel': 'parent',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'root',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'self',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/landsat-8-l1_EXAMPLE'},\n",
       "    {'rel': 'child',\n",
       "     'href': 'https://landsat-stac.s3.amazonaws.com/landsat-8-l1/paths/catalog.json'}],\n",
       "   'title': 'Landsat 8 L1',\n",
       "   'extent': {'spatial': {'bbox': [[-180, -90, 180, 90]]},\n",
       "    'temporal': {'interval': [['2013-06-01T00:00:00Z', None]]}},\n",
       "   'license': 'PDDL-1.0',\n",
       "   'keywords': ['landsat'],\n",
       "   'providers': [{'url': 'https://landsat.usgs.gov/',\n",
       "     'name': 'USGS',\n",
       "     'roles': ['producer', 'licensor']},\n",
       "    {'url': 'https://github.com/landsat-pds/landsat_ingestor',\n",
       "     'name': 'Planet Labs',\n",
       "     'roles': ['processor']},\n",
       "    {'url': 'https://landsatonaws.com/', 'name': 'AWS', 'roles': ['host']},\n",
       "    {'url': 'https://developmentseed.org/',\n",
       "     'name': 'Development Seed',\n",
       "     'roles': ['processor']}],\n",
       "   'summaries': {'gsd': [30],\n",
       "    'eo:bands': [{'name': 'B1',\n",
       "      'common_name': 'coastal',\n",
       "      'center_wavelength': 0.44,\n",
       "      'full_width_half_max': 0.02},\n",
       "     {'name': 'B2',\n",
       "      'common_name': 'blue',\n",
       "      'center_wavelength': 0.48,\n",
       "      'full_width_half_max': 0.06},\n",
       "     {'name': 'B3',\n",
       "      'common_name': 'green',\n",
       "      'center_wavelength': 0.56,\n",
       "      'full_width_half_max': 0.06},\n",
       "     {'name': 'B4',\n",
       "      'common_name': 'red',\n",
       "      'center_wavelength': 0.65,\n",
       "      'full_width_half_max': 0.04},\n",
       "     {'name': 'B5',\n",
       "      'common_name': 'nir',\n",
       "      'center_wavelength': 0.86,\n",
       "      'full_width_half_max': 0.03},\n",
       "     {'name': 'B6',\n",
       "      'common_name': 'swir16',\n",
       "      'center_wavelength': 1.6,\n",
       "      'full_width_half_max': 0.08},\n",
       "     {'name': 'B7',\n",
       "      'common_name': 'swir22',\n",
       "      'center_wavelength': 2.2,\n",
       "      'full_width_half_max': 0.2},\n",
       "     {'name': 'B8',\n",
       "      'common_name': 'pan',\n",
       "      'center_wavelength': 0.59,\n",
       "      'full_width_half_max': 0.18},\n",
       "     {'name': 'B9',\n",
       "      'common_name': 'cirrus',\n",
       "      'center_wavelength': 1.37,\n",
       "      'full_width_half_max': 0.02},\n",
       "     {'name': 'B10',\n",
       "      'common_name': 'lwir11',\n",
       "      'center_wavelength': 10.9,\n",
       "      'full_width_half_max': 0.8},\n",
       "     {'name': 'B11',\n",
       "      'common_name': 'lwir12',\n",
       "      'center_wavelength': 12,\n",
       "      'full_width_half_max': 1}],\n",
       "    'platform': ['landsat-8'],\n",
       "    'instruments': ['oli', 'tirs']},\n",
       "   'description': 'Landat 8 imagery radiometrically calibrated and orthorectified using gound points and Digital Elevation Model (DEM) data to correct relief displacement.',\n",
       "   'stac_version': '1.0.0-beta.2',\n",
       "   'stac_extensions': []},\n",
       "  {'id': 'geoanalytics.googlecloud.northamerica-northeast.modis.MOD11A2',\n",
       "   'type': 'Collection',\n",
       "   'links': [{'rel': 'items',\n",
       "     'type': 'application/geo+json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/geoanalytics.googlecloud.northamerica-northeast.modis.MOD11A2/items'},\n",
       "    {'rel': 'parent',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'root',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'self',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/geoanalytics.googlecloud.northamerica-northeast.modis.MOD11A2'}],\n",
       "   'title': 'MODIS MOD11A2 Version 6: MODIS/Terra Land Surface Temperature/Emissivity 8-Day L3 Global 1 km SIN Grid',\n",
       "   'extent': {'spatial': {'bbox': [[-175.42826400980712,\n",
       "       39.99999999999917,\n",
       "       -31.114476537209832,\n",
       "       70.00000000000304]]},\n",
       "    'temporal': {'interval': [['2016-01-01T00:00:00Z',\n",
       "       '2020-12-26T00:00:00Z']]}},\n",
       "   'license': 'proprietary',\n",
       "   'keywords': ['modis', 'mod11a2', 'lpdaac'],\n",
       "   'summaries': {'bands': [{'name': 'LST_Day_1km',\n",
       "      'index': 1,\n",
       "      'units': 'Kelvin',\n",
       "      'description': 'Daytime Land Surface Temperature',\n",
       "      'valid_range': '7500 to 65535'},\n",
       "     {'name': 'Emis_32',\n",
       "      'index': 2,\n",
       "      'units': 'N/A',\n",
       "      'description': 'Band 32 emissivity',\n",
       "      'valid_range': '1 to 255'},\n",
       "     {'name': 'Clear_sky_days',\n",
       "      'index': 3,\n",
       "      'units': 'Bit Field',\n",
       "      'description': 'Day clear-sky coverage',\n",
       "      'valid_range': '1 to 255'},\n",
       "     {'name': 'Clear_sky_nights',\n",
       "      'index': 4,\n",
       "      'units': 'Bit Field',\n",
       "      'description': 'Night clear-sky coverage',\n",
       "      'valid_range': '1 to 255'},\n",
       "     {'name': 'QC_Day',\n",
       "      'index': 5,\n",
       "      'units': 'Bit Field',\n",
       "      'description': 'Daytime LST Quality Indicators',\n",
       "      'valid_range': '0 to 255'},\n",
       "     {'name': 'Day_view_time',\n",
       "      'index': 6,\n",
       "      'units': 'Hours',\n",
       "      'description': 'Local time of day observation',\n",
       "      'valid_range': '0 to 240'},\n",
       "     {'name': 'Day_view_angl',\n",
       "      'index': 7,\n",
       "      'units': 'Degree',\n",
       "      'description': 'View zenith angle of day observation',\n",
       "      'valid_range': '0 to 130'},\n",
       "     {'name': 'LST_Night_1km',\n",
       "      'index': 8,\n",
       "      'units': 'Kelvin',\n",
       "      'description': 'Nighttime Land Surface Temperature',\n",
       "      'valid_range': '7500 to 65535'},\n",
       "     {'name': 'QC_Night',\n",
       "      'index': 9,\n",
       "      'units': 'Bit Field',\n",
       "      'description': 'Nighttime LST Quality indicators',\n",
       "      'valid_range': '0 to 255'},\n",
       "     {'name': 'Night_view_time',\n",
       "      'index': 10,\n",
       "      'units': 'Hours',\n",
       "      'description': 'Local time of night observation',\n",
       "      'valid_range': '0 to 240'},\n",
       "     {'name': 'Night_view_angl',\n",
       "      'index': 11,\n",
       "      'units': 'Degree',\n",
       "      'description': 'View zenith angle of night observation',\n",
       "      'valid_range': '0 to 130'},\n",
       "     {'name': 'Emis_31',\n",
       "      'index': 12,\n",
       "      'units': 'N/A',\n",
       "      'description': 'Band 31 emissivity',\n",
       "      'valid_range': '1 to 255'}]},\n",
       "   'description': 'The MOD11A2 Version 6 product provides an average 8-day per-pixel Land Surface Temperature and Emissivity (LST&E) with a 1 kilometer (km) spatial resolution in a 1,200 by 1,200 km grid. Each pixel value in the MOD11A2 is a simple average of all the corresponding MOD11A1 LST pixels collected within that 8-day period. The 8-day compositing period was chosen because twice that period is the exact ground track repeat period of the Terra and Aqua platforms. ',\n",
       "   'stac_version': '1.0.0',\n",
       "   'stac_extensions': []},\n",
       "  {'id': 'landsat-8-l1',\n",
       "   'links': [{'rel': 'items',\n",
       "     'type': 'application/geo+json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/landsat-8-l1/items'},\n",
       "    {'rel': 'parent',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'root',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'self',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/landsat-8-l1'},\n",
       "    {'rel': 'child',\n",
       "     'href': 'https://landsat-stac.s3.amazonaws.com/landsat-8-l1/paths/catalog.json'}],\n",
       "   'title': 'Landsat 8 L1',\n",
       "   'extent': {'spatial': {'bbox': [[-180, -90, 180, 90]]},\n",
       "    'temporal': {'interval': [['2013-06-01T00:00:00Z', None]]}},\n",
       "   'license': 'PDDL-1.0',\n",
       "   'keywords': ['landsat'],\n",
       "   'providers': [{'url': 'https://landsat.usgs.gov/',\n",
       "     'name': 'USGS',\n",
       "     'roles': ['producer', 'licensor']},\n",
       "    {'url': 'https://github.com/landsat-pds/landsat_ingestor',\n",
       "     'name': 'Planet Labs',\n",
       "     'roles': ['processor']},\n",
       "    {'url': 'https://landsatonaws.com/', 'name': 'AWS', 'roles': ['host']},\n",
       "    {'url': 'https://developmentseed.org/',\n",
       "     'name': 'Development Seed',\n",
       "     'roles': ['processor']}],\n",
       "   'summaries': {'gsd': [30],\n",
       "    'eo:bands': [{'name': 'B1',\n",
       "      'common_name': 'coastal',\n",
       "      'center_wavelength': 0.44,\n",
       "      'full_width_half_max': 0.02},\n",
       "     {'name': 'B2',\n",
       "      'common_name': 'blue',\n",
       "      'center_wavelength': 0.48,\n",
       "      'full_width_half_max': 0.06},\n",
       "     {'name': 'B3',\n",
       "      'common_name': 'green',\n",
       "      'center_wavelength': 0.56,\n",
       "      'full_width_half_max': 0.06},\n",
       "     {'name': 'B4',\n",
       "      'common_name': 'red',\n",
       "      'center_wavelength': 0.65,\n",
       "      'full_width_half_max': 0.04},\n",
       "     {'name': 'B5',\n",
       "      'common_name': 'nir',\n",
       "      'center_wavelength': 0.86,\n",
       "      'full_width_half_max': 0.03},\n",
       "     {'name': 'B6',\n",
       "      'common_name': 'swir16',\n",
       "      'center_wavelength': 1.6,\n",
       "      'full_width_half_max': 0.08},\n",
       "     {'name': 'B7',\n",
       "      'common_name': 'swir22',\n",
       "      'center_wavelength': 2.2,\n",
       "      'full_width_half_max': 0.2},\n",
       "     {'name': 'B8',\n",
       "      'common_name': 'pan',\n",
       "      'center_wavelength': 0.59,\n",
       "      'full_width_half_max': 0.18},\n",
       "     {'name': 'B9',\n",
       "      'common_name': 'cirrus',\n",
       "      'center_wavelength': 1.37,\n",
       "      'full_width_half_max': 0.02},\n",
       "     {'name': 'B10',\n",
       "      'common_name': 'lwir11',\n",
       "      'center_wavelength': 10.9,\n",
       "      'full_width_half_max': 0.8},\n",
       "     {'name': 'B11',\n",
       "      'common_name': 'lwir12',\n",
       "      'center_wavelength': 12,\n",
       "      'full_width_half_max': 1}],\n",
       "    'platform': ['landsat-8'],\n",
       "    'instruments': ['oli', 'tirs']},\n",
       "   'description': 'Landat 8 imagery radiometrically calibrated and orthorectified using gound points and Digital Elevation Model (DEM) data to correct relief displacement.',\n",
       "   'stac_version': '1.0.0-beta.2',\n",
       "   'stac_extensions': []},\n",
       "  {'id': 'geoanalytics.googlecloud.northamerica-northeast.modis.MCD12Q1',\n",
       "   'type': 'Collection',\n",
       "   'links': [{'rel': 'items',\n",
       "     'type': 'application/geo+json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/geoanalytics.googlecloud.northamerica-northeast.modis.MCD12Q1/items'},\n",
       "    {'rel': 'parent',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'root',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'self',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/geoanalytics.googlecloud.northamerica-northeast.modis.MCD12Q1'}],\n",
       "   'title': 'MODIS MCD12Q1 Version 6: MODIS/Terra+Aqua Land Cover Type Yearly L3 Global 500 m SIN Grid',\n",
       "   'extent': {'spatial': {'bbox': [[-175.4282639411754,\n",
       "       39.99999999641087,\n",
       "       -31.114476531501527,\n",
       "       69.99999999371678]]},\n",
       "    'temporal': {'interval': [['2014-01-01T00:00:00Z',\n",
       "       '2019-01-01T00:00:00Z']]}},\n",
       "   'license': 'proprietary',\n",
       "   'keywords': ['modis', 'mcd12q1', 'lpdaac'],\n",
       "   'summaries': {'bands': [{'name': 'LC_Type1',\n",
       "      'index': 1,\n",
       "      'units': 'Class',\n",
       "      'description': 'Land Cover Type 1: Annual International Geosphere-Biosphere Programme (IGBP) classification',\n",
       "      'valid_range': '1 to 17'},\n",
       "     {'name': 'LC_Prop2',\n",
       "      'index': 2,\n",
       "      'units': 'Class',\n",
       "      'description': 'FAO-LCCS2 land use layer',\n",
       "      'valid_range': '1 to 40'},\n",
       "     {'name': 'LC_Prop3',\n",
       "      'index': 3,\n",
       "      'units': 'Class',\n",
       "      'description': 'FAO-LCCS3 surface hydrology layer',\n",
       "      'valid_range': '1 to 51'},\n",
       "     {'name': 'QC',\n",
       "      'index': 4,\n",
       "      'units': 'Quality Flag',\n",
       "      'description': 'Product quality flags',\n",
       "      'valid_range': '0 to 10'},\n",
       "     {'name': 'LW',\n",
       "      'index': 5,\n",
       "      'units': 'Class',\n",
       "      'description': 'Binary land (class 2) / water (class 1) mask derived from MOD44W',\n",
       "      'valid_range': '1 to 2'},\n",
       "     {'name': 'LC_Type2',\n",
       "      'index': 6,\n",
       "      'units': 'Class',\n",
       "      'description': 'Land Cover Type 2: Annual University of Maryland (UMD) classification',\n",
       "      'valid_range': '0 to 15'},\n",
       "     {'name': 'LC_Type3',\n",
       "      'index': 7,\n",
       "      'units': 'Class',\n",
       "      'description': 'Land Cover Type 3: Annual Leaf Area Index (LAI) classification',\n",
       "      'valid_range': '0 to 10'},\n",
       "     {'name': 'LC_Type4',\n",
       "      'index': 8,\n",
       "      'units': 'class',\n",
       "      'description': 'Land Cover Type 4: Annual BIOME-Biogeochemical Cycles (BGC) classification',\n",
       "      'valid_range': '0 to 8'},\n",
       "     {'name': 'LC_Type5',\n",
       "      'index': 9,\n",
       "      'units': 'Class',\n",
       "      'description': 'Land Cover Type 5: Annual Plant Functional Types classification',\n",
       "      'valid_range': '0 to 11'},\n",
       "     {'name': 'LC_Prop1_Assessment',\n",
       "      'index': 10,\n",
       "      'units': 'Percent',\n",
       "      'description': 'LCCS1 land cover layer confidence',\n",
       "      'valid_range': '0 to 100'},\n",
       "     {'name': 'LC_Prop2_Assessment',\n",
       "      'index': 11,\n",
       "      'units': 'Percent',\n",
       "      'description': 'LCCS2 land use layer confidence',\n",
       "      'valid_range': '0 to 100'},\n",
       "     {'name': 'LC_Prop3_Assessment',\n",
       "      'index': 12,\n",
       "      'units': 'Percent',\n",
       "      'description': 'LCCS3 surface hydrology layer confidence',\n",
       "      'valid_range': '0 to 100'},\n",
       "     {'name': 'LC_Prop1',\n",
       "      'index': 13,\n",
       "      'units': 'Class',\n",
       "      'description': 'FAO-Land Cover Classification System 1 (LCCS1) land cover layer',\n",
       "      'valid_range': '1 to 43'}]},\n",
       "   'description': 'The Terra and Aqua combined Moderate Resolution Imaging Spectroradiometer (MODIS) Land Cover Type (MCD12Q1) Version 6 data product provides global land cover types at yearly intervals (2001-2019). The MCD12Q1 Version 6 data product is derived using supervised classifications of MODIS Terra and Aqua reflectance data. The supervised classifications then undergo additional post-processing that incorporate prior knowledge and ancillary information to further refine specific classes.',\n",
       "   'stac_version': '1.0.0',\n",
       "   'stac_extensions': []},\n",
       "  {'id': 'geoanalytics.googlecloud.northamerica-northeast.NBR_sent2.NBS2DEMO',\n",
       "   'type': 'Collection',\n",
       "   'links': [{'rel': 'items',\n",
       "     'type': 'application/geo+json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/geoanalytics.googlecloud.northamerica-northeast.NBR_sent2.NBS2DEMO/items'},\n",
       "    {'rel': 'parent',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'root',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/'},\n",
       "    {'rel': 'self',\n",
       "     'type': 'application/json',\n",
       "     'href': 'http://stac.geoanalytics.ca/collections/geoanalytics.googlecloud.northamerica-northeast.NBR_sent2.NBS2DEMO'}],\n",
       "   'title': 'GeoAnalytics Normalized Burn Ratio Version 1: Sentinel-2 NBR Yearly Median Composites 20 m Grid',\n",
       "   'extent': {'spatial': {'bbox': [[-119.32822136431027,\n",
       "       58.81751007134294,\n",
       "       -118.38623882273835,\n",
       "       59.27439667338148]]},\n",
       "    'temporal': {'interval': [['2016-06-03T19:19:12.027000Z',\n",
       "       '2021-09-30T19:22:09.024000Z']]}},\n",
       "   'license': 'proprietary',\n",
       "   'keywords': ['sentinel-2', 'nbr', 'composite'],\n",
       "   'description': 'Normalized Burn Ratio derived from Sentinel-2 yearly (June to September) median composites on 20 m grid. This dataset has been created for a GeoAnalytics onboarding demonstration.',\n",
       "   'stac_version': '1.0.0',\n",
       "   'stac_extensions': []}],\n",
       " 'links': [{'rel': 'root',\n",
       "   'type': 'application/json',\n",
       "   'href': 'http://stac.geoanalytics.ca/'},\n",
       "  {'rel': 'parent',\n",
       "   'type': 'application/json',\n",
       "   'href': 'http://stac.geoanalytics.ca/'},\n",
       "  {'rel': 'self',\n",
       "   'type': 'application/json',\n",
       "   'href': 'http://stac.geoanalytics.ca/collections'}]}"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "get_stac_endpoint('/collections').json()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we know what collections are currently available in the GEOAnalytics STAC server let's use PySTAC Client to query only the Landsat8-Level1 collection"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. How to query a STAC server\n",
    "Here is an example on how to query the STAC server and put it into an XArray.dataarray, using StackSTAC.\n",
    "\n",
    "In this example you'll learn how to query the Geoanalytics STAC server by collection, date range, AOI, and for specific Bands. \n",
    "\n",
    "1. Start by accessing the Geoanalytics STAC server using PySTAC Client\n",
    "2. Create a polygon and convert it into a geopandas GeoDataFrame, for use as our AOI.\n",
    "3. Set the remaining parameters necessary for your query.\n",
    "4. Query the STAC server using PySTAC Client.\n",
    "5. Ingest the output of your Query into an XArray.dataarray, using StackSTAC."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Use Pystac Client to access the Geoanalytics STAC server\n",
    "catalog = Client.open(STAC_BASE_URL, requests_headers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a polygon for defining our Area of Interest (AOI) in this case we are using a rough outline of Vancouver, BC created using: https://www.keene.edu/campus/maps/tool/\n",
    "polygon={\n",
    "      \"coordinates\": [\n",
    "        [\n",
    "          [\n",
    "            -123.1460953,\n",
    "            49.2792286\n",
    "          ],\n",
    "          [\n",
    "            -123.242569,\n",
    "            49.2895303\n",
    "          ],\n",
    "          [\n",
    "            -123.2666016,\n",
    "            49.2669084\n",
    "          ],\n",
    "          [\n",
    "            -123.2120132,\n",
    "            49.2272391\n",
    "          ],\n",
    "          [\n",
    "            -123.1419754,\n",
    "            49.2030184\n",
    "          ],\n",
    "          [\n",
    "            -123.1313324,\n",
    "            49.2675805\n",
    "          ],\n",
    "          [\n",
    "            -123.1460953,\n",
    "            49.2792286\n",
    "          ]\n",
    "        ]\n",
    "      ],\n",
    "      \"type\": \"Polygon\"\n",
    "    }"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'Polygon' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[0;32mIn [21]\u001b[0m, in \u001b[0;36m<cell line: 7>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m     lon_list\u001b[38;5;241m.\u001b[39mappend(lon)\n\u001b[1;32m      6\u001b[0m     lat_list\u001b[38;5;241m.\u001b[39mappend(lat)\n\u001b[0;32m----> 7\u001b[0m polygon_geom \u001b[38;5;241m=\u001b[39m \u001b[43mPolygon\u001b[49m(\u001b[38;5;28mzip\u001b[39m(lon_list, lat_list))\n\u001b[1;32m      8\u001b[0m crs \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mEPSG:4326\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      9\u001b[0m polygon \u001b[38;5;241m=\u001b[39m gpd\u001b[38;5;241m.\u001b[39mGeoDataFrame(index\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m0\u001b[39m], crs\u001b[38;5;241m=\u001b[39mcrs, geometry\u001b[38;5;241m=\u001b[39m[polygon_geom])\n",
      "\u001b[0;31mNameError\u001b[0m: name 'Polygon' is not defined"
     ]
    }
   ],
   "source": [
    "lon_list = []\n",
    "lat_list = []\n",
    "\n",
    "for lon,lat in polygon['coordinates'][0]:\n",
    "    lon_list.append(lon)\n",
    "    lat_list.append(lat)\n",
    "polygon_geom = Polygon(zip(lon_list, lat_list))\n",
    "crs = 'EPSG:4326'\n",
    "polygon = gpd.GeoDataFrame(index=[0], crs=crs, geometry=[polygon_geom])\n",
    "polygon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "FOOTPRINT = polygon.to_crs('epsg:4326').geometry[0].envelope\n",
    "FOOTPRINT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "FOOTPRINT.bounds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# CONFIG \n",
    "# -------------\n",
    "TGT_BANDS =  ['B04', 'B08']#'B01', 'B02', 'B03', 'B04', 'B05', 'B06', 'B07', 'B08', 'B09', 'B11', 'B12', 'B8A']\n",
    "YEAR = ['2016']\n",
    "BEGIN_MONTH = '01'\n",
    "END_MONTH = '12'\n",
    "MAX_CLOUD = 5\n",
    "READ_IN_CHUNK = 4096\n",
    "RESOLUTION = 10\n",
    "# -------------"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "items = catalog.search(\n",
    "        collections = ['sentinel-2-l2a'],\n",
    "        intersects = FOOTPRINT,\n",
    "        query={\"eo:cloud_cover\": {\"lt\": MAX_CLOUD}, \"s2:mgrs_tile\":{\"eq\":'10UFA'}},\n",
    "        datetime = date_range,\n",
    "    ).get_all_items()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = (\n",
    "    stackstac.stack(\n",
    "        items,\n",
    "        assets=TGT_BANDS, \n",
    "        resolution=RESOLUTION, # Set all bands res to this\n",
    "        bounds_latlon=FOOTPRINT.bounds, # clip to AOI bounds\n",
    "        epsg = 32610\n",
    "    ).where(lambda x: x > 0, other=np.nan).assign_coords( # Convert nodata zero to np.nan\n",
    "        band=lambda x: x.common_name.rename(\"band\"),  # use common names\n",
    "        time=lambda x: x.time.dt.round(\n",
    "            \"D\"\n",
    "        ))  \n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Further Documentation\n",
    "Here are resources for a deeper look into the SpatioTemporal Assest Catalog and its API:\n",
    "\n",
    "- **Link to GEOAnalytics Canada STAC: https://stac.geoanalytics.ca/**\n",
    "- **The STAC Specification: https://github.com/radiantearth/stac-spec**\n",
    "- **The STAC API Specification: https://github.com/radiantearth/stac-api-spec**\n",
    "- **GEOAnalytics STAC FastAPI using Swagger: https://stac.geoanalytics.ca/docs**\n",
    "    - Documentation for the STAC FastAPI: https://github.com/stac-utils/stac-fastapi"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
